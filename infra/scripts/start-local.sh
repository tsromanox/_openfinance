#!/bin/bash
echo "üöÄ Iniciando ambiente local Open Finance..."

# Verificar se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker Desktop."
    exit 1
fi

# Criar arquivo .env se n√£o existir
if [ ! -f .env ]; then
    echo "üìù Criando arquivo .env..."
    cp .env.example .env
fi

# Criar diret√≥rios necess√°rios
mkdir -p config/grafana/provisioning/{dashboards,datasources}
mkdir -p scripts

# Iniciar servi√ßos
echo "üê≥ Iniciando containers..."
docker-compose up -d

# Aguardar servi√ßos ficarem prontos
echo "‚è≥ Aguardando servi√ßos iniciarem..."
sleep 10

# Verificar status dos servi√ßos
echo "üîç Verificando status dos servi√ßos..."
docker-compose ps

# Criar t√≥picos Kafka
echo "üì® Criando t√≥picos Kafka..."
docker exec openfinance-kafka kafka-topics --create \
    --topic account-updates \
    --bootstrap-server localhost:9092 \
    --partitions 10 \
    --replication-factor 1 \
    --if-not-exists

docker exec openfinance-kafka kafka-topics --create \
    --topic consent-updates \
    --bootstrap-server localhost:9092 \
    --partitions 10 \
    --replication-factor 1 \
    --if-not-exists

echo "‚úÖ Ambiente local iniciado com sucesso!"
echo ""
echo "üìä URLs dispon√≠veis:"
echo "  - Kafka UI: http://localhost:8090"
echo "  - Grafana: http://localhost:3000 (admin/admin)"
echo "  - Prometheus: http://localhost:9090"
echo "  - Cosmos Emulator: https://localhost:8081/_explorer/index.html"
echo "  - Redis: localhost:6379"
echo "  - PostgreSQL: localhost:5432"
echo ""
echo "üí° Para parar os servi√ßos, execute: docker-compose down"
echo "üí° Para ver os logs, execute: docker-compose logs -f"