version: '3.8'

services:
  resources-service:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: resources-service-vthreads
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JAVA_TOOL_OPTIONS: "--enable-preview"
      # Virtual Thread Configuration
      JDK_VIRTUAL_THREAD_SCHEDULER_PARALLELISM: "10000"
      JDK_VIRTUAL_THREAD_SCHEDULER_MAX_POOL_SIZE: "100000"
      # Database
      DB_URL: jdbc:postgresql://postgres:5432/openfinance
      DB_USERNAME: openfinance_user
      DB_PASSWORD: openfinance_pass
      # Kafka
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Resources Configuration
      BATCH_SIZE: 1000
      MAX_VIRTUAL_THREADS: 10000
      BATCH_TIMEOUT: 120
      SCHEDULER_ENABLED: "true"
      VIRTUAL_THREADS_ENABLED: "true"
    depends_on:
      - postgres
      - kafka
      - redis
    networks:
      - openfinance-network
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4'
        reservations:
          memory: 2G
          cpus: '2'

  postgres:
    image: postgres:16-alpine
    container_name: postgres-resources-vthreads
    environment:
      POSTGRES_DB: openfinance
      POSTGRES_USER: openfinance_user
      POSTGRES_PASSWORD: openfinance_pass
      # PostgreSQL tuning for high concurrency
      POSTGRES_MAX_CONNECTIONS: 500
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
    ports:
      - "5433:5432"
    volumes:
      - postgres_resources_data:/var/lib/postgresql/data
      - ./init-resources-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - openfinance-network

  redis:
    image: redis:7-alpine
    container_name: redis-resources-vthreads
    ports:
      - "6380:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_resources_data:/data
    networks:
      - openfinance-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper-resources-vthreads
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - openfinance-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-resources-vthreads
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
      - "29093:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka_resources_data:/var/lib/kafka/data
    networks:
      - openfinance-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-resources
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - openfinance-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-resources
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - openfinance-network

networks:
  openfinance-network:
    driver: bridge
    external: false

volumes:
  postgres_resources_data:
  redis_resources_data:
  kafka_resources_data:
  prometheus_data:
  grafana_data: