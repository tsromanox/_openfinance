/*
 * API Consents - Open Finance Brasil
 * API de consentimentos para o Open Finance Brasil
 *
 * The version of the OpenAPI document: 3.2.0
 * Contact: contato@openfinance.org.br
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package br.com.openfinance.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConsentExtendedData
 */
@JsonPropertyOrder({
  ConsentExtendedData.JSON_PROPERTY_CONSENT_ID,
  ConsentExtendedData.JSON_PROPERTY_EXPIRATION_DATE_TIME,
  ConsentExtendedData.JSON_PROPERTY_STATUS_UPDATE_DATE_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-12T15:58:57.215261-03:00[America/Sao_Paulo]", comments = "Generator version: 7.14.0")
public class ConsentExtendedData {
  public static final String JSON_PROPERTY_CONSENT_ID = "consentId";
  @jakarta.annotation.Nonnull
  private String consentId;

  public static final String JSON_PROPERTY_EXPIRATION_DATE_TIME = "expirationDateTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime expirationDateTime;

  public static final String JSON_PROPERTY_STATUS_UPDATE_DATE_TIME = "statusUpdateDateTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime statusUpdateDateTime;

  public ConsentExtendedData() {
  }

  public ConsentExtendedData consentId(@jakarta.annotation.Nonnull String consentId) {
    
    this.consentId = consentId;
    return this;
  }

  /**
   * Identificador único do consentimento
   * @return consentId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConsentId() {
    return consentId;
  }


  @JsonProperty(JSON_PROPERTY_CONSENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsentId(@jakarta.annotation.Nonnull String consentId) {
    this.consentId = consentId;
  }

  public ConsentExtendedData expirationDateTime(@jakarta.annotation.Nonnull OffsetDateTime expirationDateTime) {
    
    this.expirationDateTime = expirationDateTime;
    return this;
  }

  /**
   * Nova data e hora de expiração do consentimento
   * @return expirationDateTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getExpirationDateTime() {
    return expirationDateTime;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpirationDateTime(@jakarta.annotation.Nonnull OffsetDateTime expirationDateTime) {
    this.expirationDateTime = expirationDateTime;
  }

  public ConsentExtendedData statusUpdateDateTime(@jakarta.annotation.Nonnull OffsetDateTime statusUpdateDateTime) {
    
    this.statusUpdateDateTime = statusUpdateDateTime;
    return this;
  }

  /**
   * Data e hora da última atualização do status
   * @return statusUpdateDateTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_UPDATE_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getStatusUpdateDateTime() {
    return statusUpdateDateTime;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_UPDATE_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatusUpdateDateTime(@jakarta.annotation.Nonnull OffsetDateTime statusUpdateDateTime) {
    this.statusUpdateDateTime = statusUpdateDateTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsentExtendedData consentExtendedData = (ConsentExtendedData) o;
    return Objects.equals(this.consentId, consentExtendedData.consentId) &&
        Objects.equals(this.expirationDateTime, consentExtendedData.expirationDateTime) &&
        Objects.equals(this.statusUpdateDateTime, consentExtendedData.statusUpdateDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consentId, expirationDateTime, statusUpdateDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsentExtendedData {\n");
    sb.append("    consentId: ").append(toIndentedString(consentId)).append("\n");
    sb.append("    expirationDateTime: ").append(toIndentedString(expirationDateTime)).append("\n");
    sb.append("    statusUpdateDateTime: ").append(toIndentedString(statusUpdateDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

